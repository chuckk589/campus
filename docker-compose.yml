services:
  redis:
    image: redis:latest
    restart: always
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  adminer:
    image: adminer:latest
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: mysqldb
    ports:
      - 8080:8080
    command: ["php", "-d", "post_max_size=500M", "-d", "upload_max_filesize=500M", "-S", "0.0.0.0:8080", "-t", "/var/www/html"]
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    command: [ "mysqld", "--default-authentication-plugin=mysql_native_password"]
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_DATABASE=$DB_NAME
    volumes:
      - db:/var/lib/mysql
    ports:
    - 3308:3306
  app:
    depends_on:
      - mysqldb
    build:
      context: .
      target: builder
    command: sh -c -f "yarn mikro-orm schema:update --run&&yarn mikro-orm seeder:run --class=ConfigSeeder;yarn run start:prod"
    restart: unless-stopped
    env_file: ./.env
    logging:
      driver: "json-file"
      options:
        max-size: "50m" 
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./src/:/app/src/
      - static:/app/dist/public/files
    ports:
      - $PORT:$PORT
    stdin_open: true
    tty: true
  prometheus:
    image: prom/prometheus:v2.37.9
    container_name: prometheus
    user: root
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./data:/prometheus
    restart: unless-stopped
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3005:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    #password: root123
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    command:
      - '-port=8098'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
volumes: 
    db:
    static:
    prometheus-data:
      driver: local
    grafana-data:
      driver: local
networks:
  monitoring:
    driver: bridge