version: '3.8'
services:
  redis:
    image: redis:latest
    restart: always
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  adminer:
    image: adminer:latest
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: mysqldb
    ports:
      - 8080:8080
    command: ["php", "-d", "post_max_size=500M", "-d", "upload_max_filesize=500M", "-S", "0.0.0.0:8080", "-t", "/var/www/html"]
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    command: [ "mysqld", "--default-authentication-plugin=mysql_native_password"]
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_DATABASE=$DB_NAME
    volumes:
      - db:/var/lib/mysql
    ports:
    - 3308:3306
  app:
    depends_on:
      - mysqldb
    build:
      context: .
      target: builder
    command: sh -c -f "yarn mikro-orm schema:update --run&&yarn mikro-orm seeder:run --class=ConfigSeeder;yarn run start:prod"
    restart: unless-stopped
    env_file: ./.env
    logging:
      driver: "json-file"
      options:
        max-size: "50m" 
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./src/:/app/src/
      - static:/app/dist/public/files
    ports:
      - $PORT:$PORT
    stdin_open: true
    tty: true
volumes: 
    db:
    static: